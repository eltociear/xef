/**
 * Please note: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
@file:Suppress("ArrayInDataClass", "EnumEntryName", "RemoveRedundantQualifierName", "UnusedImport")

package com.xebia.functional.openai.generated.model

import kotlin.jvm.JvmInline
import kotlinx.serialization.*
import kotlinx.serialization.builtins.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.*

@Serializable(with = ChatCompletionToolChoiceOptionSerializer::class)
sealed interface ChatCompletionToolChoiceOption {

  @JvmInline
  @Serializable
  value class CaseChatCompletionNamedToolChoice(val value: ChatCompletionNamedToolChoice) :
    ChatCompletionToolChoiceOption

  @JvmInline
  @Serializable
  value class CaseString(val value: kotlin.String) : ChatCompletionToolChoiceOption
}

private object ChatCompletionToolChoiceOptionSerializer :
  KSerializer<ChatCompletionToolChoiceOption> {
  @OptIn(InternalSerializationApi::class, ExperimentalSerializationApi::class)
  override val descriptor: SerialDescriptor =
    buildSerialDescriptor("ChatCompletionToolChoiceOption", PolymorphicKind.SEALED) {
      element("1", ChatCompletionNamedToolChoice.serializer().descriptor)
      element("2", kotlin.String.serializer().descriptor)
    }

  override fun deserialize(decoder: Decoder): ChatCompletionToolChoiceOption {
    val json = decoder.decodeSerializableValue(JsonElement.serializer())
    return kotlin
      .runCatching {
        ChatCompletionToolChoiceOption.CaseChatCompletionNamedToolChoice(
          Json.decodeFromJsonElement(ChatCompletionNamedToolChoice.serializer(), json)
        )
      }
      .getOrNull()
      ?: kotlin
        .runCatching {
          ChatCompletionToolChoiceOption.CaseString(
            Json.decodeFromJsonElement(kotlin.String.serializer(), json)
          )
        }
        .getOrThrow()
  }

  override fun serialize(encoder: Encoder, value: ChatCompletionToolChoiceOption) =
    when (value) {
      is ChatCompletionToolChoiceOption.CaseChatCompletionNamedToolChoice ->
        encoder.encodeSerializableValue(ChatCompletionNamedToolChoice.serializer(), value.value)
      is ChatCompletionToolChoiceOption.CaseString ->
        encoder.encodeSerializableValue(kotlin.String.serializer(), value.value)
    }
}
