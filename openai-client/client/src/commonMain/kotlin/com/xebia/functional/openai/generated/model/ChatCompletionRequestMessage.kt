/**
 * Please note: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
@file:Suppress("ArrayInDataClass", "EnumEntryName", "RemoveRedundantQualifierName", "UnusedImport")

package com.xebia.functional.openai.generated.model

import kotlin.jvm.JvmInline
import kotlinx.serialization.*
import kotlinx.serialization.builtins.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.*

@Serializable(with = ChatCompletionRequestMessageSerializer::class)
sealed interface ChatCompletionRequestMessage {

  @JvmInline
  @Serializable
  value class CaseChatCompletionRequestAssistantMessage(
    val value: ChatCompletionRequestAssistantMessage
  ) : ChatCompletionRequestMessage

  @JvmInline
  @Serializable
  value class CaseChatCompletionRequestFunctionMessage(
    val value: ChatCompletionRequestFunctionMessage
  ) : ChatCompletionRequestMessage

  @JvmInline
  @Serializable
  value class CaseChatCompletionRequestSystemMessage(
    val value: ChatCompletionRequestSystemMessage
  ) : ChatCompletionRequestMessage

  @JvmInline
  @Serializable
  value class CaseChatCompletionRequestToolMessage(val value: ChatCompletionRequestToolMessage) :
    ChatCompletionRequestMessage

  @JvmInline
  @Serializable
  value class CaseChatCompletionRequestUserMessage(val value: ChatCompletionRequestUserMessage) :
    ChatCompletionRequestMessage
}

private object ChatCompletionRequestMessageSerializer : KSerializer<ChatCompletionRequestMessage> {
  @OptIn(InternalSerializationApi::class, ExperimentalSerializationApi::class)
  override val descriptor: SerialDescriptor =
    buildSerialDescriptor("ChatCompletionRequestMessage", PolymorphicKind.SEALED) {
      element("1", ChatCompletionRequestAssistantMessage.serializer().descriptor)
      element("2", ChatCompletionRequestFunctionMessage.serializer().descriptor)
      element("3", ChatCompletionRequestSystemMessage.serializer().descriptor)
      element("4", ChatCompletionRequestToolMessage.serializer().descriptor)
      element("5", ChatCompletionRequestUserMessage.serializer().descriptor)
    }

  override fun deserialize(decoder: Decoder): ChatCompletionRequestMessage {
    val json = decoder.decodeSerializableValue(JsonElement.serializer())
    return kotlin
      .runCatching {
        ChatCompletionRequestMessage.CaseChatCompletionRequestAssistantMessage(
          Json.decodeFromJsonElement(ChatCompletionRequestAssistantMessage.serializer(), json)
        )
      }
      .getOrNull()
      ?: kotlin
        .runCatching {
          ChatCompletionRequestMessage.CaseChatCompletionRequestFunctionMessage(
            Json.decodeFromJsonElement(ChatCompletionRequestFunctionMessage.serializer(), json)
          )
        }
        .getOrNull()
      ?: kotlin
        .runCatching {
          ChatCompletionRequestMessage.CaseChatCompletionRequestSystemMessage(
            Json.decodeFromJsonElement(ChatCompletionRequestSystemMessage.serializer(), json)
          )
        }
        .getOrNull()
      ?: kotlin
        .runCatching {
          ChatCompletionRequestMessage.CaseChatCompletionRequestToolMessage(
            Json.decodeFromJsonElement(ChatCompletionRequestToolMessage.serializer(), json)
          )
        }
        .getOrNull()
      ?: kotlin
        .runCatching {
          ChatCompletionRequestMessage.CaseChatCompletionRequestUserMessage(
            Json.decodeFromJsonElement(ChatCompletionRequestUserMessage.serializer(), json)
          )
        }
        .getOrThrow()
  }

  override fun serialize(encoder: Encoder, value: ChatCompletionRequestMessage) =
    when (value) {
      is ChatCompletionRequestMessage.CaseChatCompletionRequestAssistantMessage ->
        encoder.encodeSerializableValue(
          ChatCompletionRequestAssistantMessage.serializer(),
          value.value
        )
      is ChatCompletionRequestMessage.CaseChatCompletionRequestFunctionMessage ->
        encoder.encodeSerializableValue(
          ChatCompletionRequestFunctionMessage.serializer(),
          value.value
        )
      is ChatCompletionRequestMessage.CaseChatCompletionRequestSystemMessage ->
        encoder.encodeSerializableValue(
          ChatCompletionRequestSystemMessage.serializer(),
          value.value
        )
      is ChatCompletionRequestMessage.CaseChatCompletionRequestToolMessage ->
        encoder.encodeSerializableValue(ChatCompletionRequestToolMessage.serializer(), value.value)
      is ChatCompletionRequestMessage.CaseChatCompletionRequestUserMessage ->
        encoder.encodeSerializableValue(ChatCompletionRequestUserMessage.serializer(), value.value)
    }
}
