/**
 * Please note: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */
@file:Suppress("ArrayInDataClass", "EnumEntryName", "RemoveRedundantQualifierName", "UnusedImport")

package com.xebia.functional.openai.generated.model

import kotlin.jvm.JvmInline
import kotlinx.serialization.*
import kotlinx.serialization.builtins.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*
import kotlinx.serialization.json.*

@Serializable(with = MessageObjectContentInnerSerializer::class)
sealed interface MessageObjectContentInner {

  @JvmInline
  @Serializable
  value class CaseMessageContentImageFileObject(val value: MessageContentImageFileObject) :
    MessageObjectContentInner

  @JvmInline
  @Serializable
  value class CaseMessageContentTextObject(val value: MessageContentTextObject) :
    MessageObjectContentInner
}

private object MessageObjectContentInnerSerializer : KSerializer<MessageObjectContentInner> {
  @OptIn(InternalSerializationApi::class, ExperimentalSerializationApi::class)
  override val descriptor: SerialDescriptor =
    buildSerialDescriptor("MessageObjectContentInner", PolymorphicKind.SEALED) {
      element("1", MessageContentImageFileObject.serializer().descriptor)
      element("2", MessageContentTextObject.serializer().descriptor)
    }

  override fun deserialize(decoder: Decoder): MessageObjectContentInner {
    val json = decoder.decodeSerializableValue(JsonElement.serializer())
    return kotlin
      .runCatching {
        MessageObjectContentInner.CaseMessageContentImageFileObject(
          Json.decodeFromJsonElement(MessageContentImageFileObject.serializer(), json)
        )
      }
      .getOrNull()
      ?: kotlin
        .runCatching {
          MessageObjectContentInner.CaseMessageContentTextObject(
            Json.decodeFromJsonElement(MessageContentTextObject.serializer(), json)
          )
        }
        .getOrThrow()
  }

  override fun serialize(encoder: Encoder, value: MessageObjectContentInner) =
    when (value) {
      is MessageObjectContentInner.CaseMessageContentImageFileObject ->
        encoder.encodeSerializableValue(MessageContentImageFileObject.serializer(), value.value)
      is MessageObjectContentInner.CaseMessageContentTextObject ->
        encoder.encodeSerializableValue(MessageContentTextObject.serializer(), value.value)
    }
}
